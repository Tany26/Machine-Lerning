improt  pandas as pd
import Quandl,math,datetime
import numpy as np
import matplotlib.pyplot as plt
from sklearn import preprocessing,ross_validation,svm
from sklearn.linear_model import LinearRegression 
import pickel
from matplotlib import sytle
style.use('ggplot')

df=Quandl.get('WIKI\GOOGL')

df=df[['Adj. Open','Adj. High','Adj. Low','Adj. Close','Adj. Volume']]

df['HL_PCT']=(df['Adj. high']-df['Adj. Low'])/df['Adj. Close']*100.0



df['PCT_ch']=(df['Adj. Open']-df['Adj. Close'])/df['Adj. Open']*100.0

df=df['HL_PCT','PCT_ch',Adj. Voume']\

forecast_col= 'Adj. Close'

df.filllna(-99999,inplace=True)

forecats_out=int(math.ceil(0.01*len(df)))

print(forecast_out)

df['Heading']=df[forecast_col'].shift(-forecast_out)


x=np.array(df.drop['Heading'],1)

x=preprocessing.scale(x)
x=x[:-forecast_out]
xl=x[-forecast_out:]


df.dropna(inplace=True)

y=np.array(df['Heading'])



xtrain,ytrian,xtest,ytest=cross_validation.train_test_split(x,y,testsize=0.2)


clf=LinearRegression()

clf.fit(xtrain,ytrain)

acc=clf.score(xtest,ytest)


forecast_set=clf.predict(xl)


df['forecast']=np.nan


lastd=df.iloc[-1].name

lastu=lastd.timestamp()
oned=86400

nextu=lastu+oned

for i in forecaste_set:
     nextd=datetime.datetime.fromtimestamp(nextu)
     nextu+=oned
     df.loc[nextd]=[np.nan for _ in range(len(df.columns)-1)] +[i]
print (df.tail())

df['Adj.Close'].plot()
df['forecast'].plot()
plt.legend(loc=4)
plt.xlabel('Date')
plt.yLabel('Price')

plt.show()
print (df.tail())
